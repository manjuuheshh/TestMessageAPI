<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="12" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-03T02:31:15 IST" name="messageAPI" finished-at="2024-07-03T02:31:18 IST" duration-ms="2918">
    <groups>
    </groups>
    <test started-at="2024-07-03T02:31:15 IST" name="Test" finished-at="2024-07-03T02:31:18 IST" duration-ms="2918">
      <class name="com.test.api.DeleteMessageTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.test.api.DeleteMessageTests@5bf0d49]" started-at="2024-07-03T02:31:15 IST" name="setup" finished-at="2024-07-03T02:31:15 IST" duration-ms="425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verify_API_returns_404_error_code_with_invalid_message_id()[pri:0, instance:com.test.api.DeleteMessageTests@5bf0d49]" started-at="2024-07-03T02:31:18 IST" name="verify_API_returns_404_error_code_with_invalid_message_id" description="verify that API returns 404 error code while deletion of the message with invalid message id" finished-at="2024-07-03T02:31:18 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_API_returns_404_error_code_with_invalid_message_id -->
        <test-method signature="verify_Deletion_of_message_is_success()[pri:0, instance:com.test.api.DeleteMessageTests@5bf0d49]" started-at="2024-07-03T02:31:18 IST" name="verify_Deletion_of_message_is_success" description="verify that API allows successful deletion of the message with valid message id" finished-at="2024-07-03T02:31:18 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify_Deletion_of_message_is_success -->
      </class> <!-- com.test.api.DeleteMessageTests -->
      <class name="com.test.api.GetMessageTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.test.api.GetMessageTests@36fc695d]" started-at="2024-07-03T02:31:15 IST" name="setup" finished-at="2024-07-03T02:31:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="Verify_that_API_fetches_all_messages_from_messages_enpoint()[pri:0, instance:com.test.api.GetMessageTests@36fc695d]" started-at="2024-07-03T02:31:15 IST" name="Verify_that_API_fetches_all_messages_from_messages_enpoint" description="Verifying that API able to GET all messages in the endpoint irrespective of the user" finished-at="2024-07-03T02:31:16 IST" duration-ms="932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_that_API_fetches_all_messages_from_messages_enpoint -->
        <test-method signature="Verify_that_API_fetches_message_for_a_particular_message_id()[pri:0, instance:com.test.api.GetMessageTests@36fc695d]" started-at="2024-07-03T02:31:16 IST" name="Verify_that_API_fetches_message_for_a_particular_message_id" description="Verifying that API able to GET message for a particular message id" finished-at="2024-07-03T02:31:17 IST" duration-ms="1001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_that_API_fetches_message_for_a_particular_message_id -->
        <test-method signature="Verify_that_API_generated_message_ids_are_unique()[pri:0, instance:com.test.api.GetMessageTests@36fc695d]" started-at="2024-07-03T02:31:17 IST" name="Verify_that_API_generated_message_ids_are_unique" description="Verifying that generated message ids are unique" finished-at="2024-07-03T02:31:18 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_that_API_generated_message_ids_are_unique -->
        <test-method signature="Verify_that_API_returns_error_for_invalid_message_id()[pri:0, instance:com.test.api.GetMessageTests@36fc695d]" started-at="2024-07-03T02:31:18 IST" name="Verify_that_API_returns_error_for_invalid_message_id" description="Verifying that API returns 404 error code for invalid message id" finished-at="2024-07-03T02:31:18 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_that_API_returns_error_for_invalid_message_id -->
        <test-method signature="Verify_that_API_returns_error_for_null_message_id()[pri:0, instance:com.test.api.GetMessageTests@36fc695d]" started-at="2024-07-03T02:31:18 IST" name="Verify_that_API_returns_error_for_null_message_id" description="Verifying that API returns 404 error code for null message id" finished-at="2024-07-03T02:31:18 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Verify_that_API_returns_error_for_null_message_id -->
      </class> <!-- com.test.api.GetMessageTests -->
      <class name="com.test.api.PostMessagesTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.test.api.PostMessagesTests@175c2241]" started-at="2024-07-03T02:31:15 IST" name="setup" finished-at="2024-07-03T02:31:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="sendEmptyMessage()[pri:0, instance:com.test.api.PostMessagesTests@175c2241]" started-at="2024-07-03T02:31:18 IST" name="sendEmptyMessage" description="verify api works for Sending empty message from User1 to User2" finished-at="2024-07-03T02:31:18 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendEmptyMessage -->
        <test-method signature="sendMessage()[pri:0, instance:com.test.api.PostMessagesTests@175c2241]" started-at="2024-07-03T02:31:18 IST" name="sendMessage" description="verify api works for valid message from User1 to User2" finished-at="2024-07-03T02:31:18 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessage -->
        <test-method signature="sendMessageWithEmptySenderAndReceiverId()[pri:0, instance:com.test.api.PostMessagesTests@175c2241]" started-at="2024-07-03T02:31:18 IST" name="sendMessageWithEmptySenderAndReceiverId" description="verify api works for Sending message with empty sender and receiver id" finished-at="2024-07-03T02:31:18 IST" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageWithEmptySenderAndReceiverId -->
        <test-method signature="sendMessageWithNoMessageField()[pri:0, instance:com.test.api.PostMessagesTests@175c2241]" started-at="2024-07-03T02:31:18 IST" name="sendMessageWithNoMessageField" description="verify api should return error for Sending message without message field" finished-at="2024-07-03T02:31:18 IST" duration-ms="34" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageWithNoMessageField -->
        <test-method signature="sendMessageWithNoSenderAndReceiver()[pri:0, instance:com.test.api.PostMessagesTests@175c2241]" started-at="2024-07-03T02:31:18 IST" name="sendMessageWithNoSenderAndReceiver" description="verify api should return error when Sending message without sender and receiver id" finished-at="2024-07-03T02:31:18 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessageWithNoSenderAndReceiver -->
      </class> <!-- com.test.api.PostMessagesTests -->
      <class name="com.test.api.UpdateMessageTests">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.test.api.UpdateMessageTests@5b7a5baa]" started-at="2024-07-03T02:31:15 IST" name="setup" finished-at="2024-07-03T02:31:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="sendMessage()[pri:0, instance:com.test.api.UpdateMessageTests@5b7a5baa]" started-at="2024-07-03T02:31:18 IST" name="sendMessage" description="verify API to update message from user1 to user2" finished-at="2024-07-03T02:31:18 IST" duration-ms="57" status="FAIL">
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[expected:<404> but was:<200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: expected:<404> but was:<200>
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at com.test.api.UpdateMessageTests.sendMessage(UpdateMessageTests.java:44)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessage -->
      </class> <!-- com.test.api.UpdateMessageTests -->
    </test> <!-- Test -->
  </suite> <!-- messageAPI -->
</testng-results>
